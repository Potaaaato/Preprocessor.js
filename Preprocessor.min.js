/*
 Preprocessor.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 Released under the Apache License, Version 2.0
 see: https://github.com/dcodeIO/Preprocessor.js for details
*/
function b(e,c){this.source=""+e;this.g=c||".";this.i=("undefined"==typeof window||!window.window)&&"function"==typeof require;this.c=50}b.b=/([ ]*)\/\/[ ]+#(include|ifn?def|endif|else)/g;b.e=/include[ ]+"([^"\\]*(\\.[^"\\]*)*)"[ ]*\r?\n/g;b.d=/(ifn?def)[ ]+([a-zA-Z0-9_]+)[ ]*\r?\n/g;b.a=/(endif|else)[ ]*\r?\n/g;b.j=function(e){return(e+"").replace(/\\(.?)/g,function(c,a){switch(a){case "\\":return"\\";case "0":return"\x00";case "":return"";default:return a}})};
b.h=function(e,c){for(var a=e.split("\n"),d=0;d<a.length;d++)a[d]=c+a[d];return a.join("\n")};b.f=function(e){return"["+e.replace(/\r/g,"").replace(/\n/g,"\\n")+"]"};
b.prototype.process=function(e,c){e=e||{};c="function"==typeof c?c:function(){};for(var a,d,f,h=[];null!==(a=b.b.exec(this.source));){c("expr: "+a[2]+" @ "+a.index+"-"+b.b.lastIndex);var g=a[1];switch(a[2]){case "include":if(!this.i)throw Error("The #include directive requires Preprocessor.js to be run in node.js");b.e.lastIndex=a.index;if(null===(d=b.e.exec(this.source)))throw Error("Illegal #"+a[2]+": "+this.source.substring(a.index,a.index+this.c)+"...");f=b.j(d[1]);c("  include: "+f);try{f=require("fs").readFileSync(this.g+
"/"+f)+"",this.source=this.source.substring(0,a.index)+b.h(f,g)+this.source.substring(b.e.lastIndex)}catch(j){throw Error("File not found: "+f+" ("+j+")");}b.b.lastIndex=0;break;case "ifdef":case "ifndef":b.d.lastIndex=a.index;if(null===(d=b.d.exec(this.source)))throw Error("Illegal #"+a[2]+": "+this.source.substring(a.index,a.index+this.c)+"...");c("  test: "+d[2]);h.push(a={include:"ifdef"==d[1]?!!e[d[2]]:!e[d[2]],index:a.index,lastIndex:b.d.lastIndex});c("  push: "+JSON.stringify(a));break;case "endif":case "else":b.a.lastIndex=
a.index;if(null===(d=b.a.exec(this.source)))throw Error("Illegal #"+a[2]+": "+this.source.substring(a.index,a.index+this.c)+"...");if(0==h.length)throw Error("Unexpected #"+d[1]+": "+this.source.substring(a.index,a.index+this.c)+"...");g=h.pop();c("  pop: "+JSON.stringify(g));f=this.source.substring(g.lastIndex,a.index);g.include?(c("  incl: "+b.f(f)),this.source=this.source.substring(0,g.index)+f+this.source.substring(b.a.lastIndex)):(c("  excl: "+b.f(f)),f="",this.source=this.source.substring(0,
g.index)+this.source.substring(b.a.lastIndex));b.b.lastIndex=0;"else"==d[1]&&(h.push(a={include:!g.include,index:g.index,lastIndex:g.index+f.length}),c("  push: "+JSON.stringify(a)))}}return this.source};b.prototype.toString=function(){return"Preprocessor"};"undefined"!=typeof module&&module.exports?module.exports=b:"undefined"!=typeof define&&define.amd?define("Preprocessor",[],function(){return b}):(this.dcodeIO||(this.dcodeIO={}),this.dcodeIO.Preprocessor=b);
